import os
import sqlite3
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram import F

from dotenv import load_dotenv

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv(override=True)
BOT_TOKEN = os.getenv("BOT_TOKEN")  # –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏–∑ .env

if not BOT_TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

# üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—Å—Ç)
try:
    conn = sqlite3.connect("game.db")
    cursor = conn.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS users (user_id INTEGER PRIMARY KEY, score INTEGER DEFAULT 0)""")
    conn.commit()
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

# üîπ –§—É–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ "–¢–∞–ø"
def get_tap_button():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("üî• –¢–∞–ø!", callback_data="tap"))
    return keyboard

# üîπ –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_game(message: types.Message):
    user_id = message.from_user.id

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    cursor.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (user_id,))
    conn.commit()

    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–∞–ø-–∏–≥—Ä—É! –ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É –∏ –Ω–∞–±–∏—Ä–∞–π –æ—á–∫–∏!", reply_markup=get_tap_button())

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ (—Ç–∞–ø–∞)
@dp.callback_query(F.data == "tap")
async def tap_button(call: types.CallbackQuery):
    user_id = call.from_user.id

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç –∏–≥—Ä–æ–∫–∞
    cursor.execute("UPDATE users SET score = score + 1 WHERE user_id = ?", (user_id,))
    conn.commit()

    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—á–µ—Ç
    cursor.execute("SELECT score FROM users WHERE user_id = ?", (user_id,))
    score = cursor.fetchone()[0]

    await call.message.edit_text(f"–¢—ã —Ç–∞–ø–Ω—É–ª! üéâ –û—á–∫–∏: {score}", reply_markup=get_tap_button())
    await call.answer()

# üîπ –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

# üîπ –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        print("‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
